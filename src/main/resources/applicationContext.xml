<?xml version="1.0" encoding="UTF-8"?>
<server xmlns="http://mina.apache.org/ftpserver/spring/v1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:beans="http://www.springframework.org/schema/beans" xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://mina.apache.org/ftpserver/spring/v1 http://mina.apache.org/ftpserver/ftpserver-1.0.xsd" 
	id="myServer" max-logins="1000" anon-enabled="true" max-anon-logins="10" max-login-failures="3" login-failure-delay="500">

		<listeners>	<!-- 显式加密,可同时接受1000个数据连接 -->
			<nio-listener name="default" port="53100" implicit-ssl="false" idle-timeout="60">
				<ssl>
					<keystore file="keystore.jks" password="834834" />
					<truststore file="truststore.jks" password="834834" />
				</ssl>
				<data-connection idle-timeout="60" implicit-ssl="true">
					<active local-port="53101" />
					<passive ports="53102-54102" />
				</data-connection>
			</nio-listener>
		</listeners>
		<db-user-manager encrypt-passwords="clear">
	<data-source>
		<beans:bean class="com.mchange.v2.c3p0.ComboPooledDataSource">

			<!-- 修改数据库IP 和 名称 -->
			<beans:property name="jdbcUrl"
				value="jdbc:mysql://192.168.0.165:3306/wh_mfp?characterEncoding=UTF-8&amp;
				autoReconnectForPools=true&amp;rewriteBatchedStatements=true&amp;useCursorFetch=true&amp;defaultFetchSize=20" />

			<beans:property name="driverClass"
				value="com.mysql.jdbc.Driver" />
			<beans:property name="user" value="root" />
			<beans:property name="password" value="Exc_led1" />
			<!-- 初始化连接池中的连接数，取值应在minPoolSize与maxPoolSize之间，默认为3 -->
			<beans:property name="initialPoolSize" value="2" />
			<!-- 连接池中保留的最小连接数，默认为：3 -->
			<beans:property name="minPoolSize" value="2" />
			<!--连接池中保留的最大连接数。默认值: 15 -->
			<beans:property name="maxPoolSize" value="15" />
			<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。默认值: 3 -->
			<beans:property name="acquireIncrement" value="2" />
			<!--定义在从数据库获取新连接失败后重复尝试的次数。默认值: 30 ；小于等于0表示无限次 -->
			<beans:property name="acquireRetryAttempts" value="0" />
			<!--重新尝试的时间间隔，默认为：1000毫秒 -->
			<beans:property name="acquireRetryDelay" value="1000" />
			<!--最大空闲时间，3600秒内未使用则连接被丢弃。若为0则永不丢弃。默认值: 0 -->
			<beans:property name="maxIdleTime" value="3600" />
			<!--c3p0全局的PreparedStatements缓存的大小。如果maxStatements与maxStatementsPerConnection均为0，则缓存不生效，只要有一个不为0，则语句的缓存就能生效。如果默认值: 
				0 -->
			<beans:property name="maxStatements" value="0" />
			<!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。默认值: 0 -->
			<beans:property name="maxStatementsPerConnection"
				value="0" />
			<!--定义所有连接测试都执行的测试语句。在使用连接测试的情况下这个一显著提高测试速度。测试的表必须在初始数据源的时候就存在。Default: 
				null -->
			<beans:property name="preferredTestQuery"
				value="select 1" />
			<!--每1800秒检查所有连接池中的空闲连接。Default: 0 -->
			<beans:property name="idleConnectionTestPeriod"
				value="1800" />
			<!-- 获取连接时测试有效性，每次都验证连接是否可用 -->
			<beans:property name="testConnectionOnCheckout"
				value="false" />
		</beans:bean>

	</data-source>
		<!-- 对ftp_user表进行操作 -->
		<insert-user>
			INSERT INTO ftp_user (userid, userpassword, homedirectory, enableflag, writepermission, idletime, uploadrate, downloadrate) VALUES ('{userid}', '{userpassword}', '{homedirectory}', {enableflag}, {writepermission}, {idletime}, {uploadrate}, {downloadrate})
		</insert-user>
		<update-user>
			UPDATE ftp_user SET userpassword='{userpassword}',homedirectory='{homedirectory}',enableflag={enableflag},writepermission={writepermission}, idletime={idletime},uploadrate={uploadrate},downloadrate={downloadrate} WHERE userid='{userid}'
		</update-user>
		<delete-user>
			DELETE FROM ftp_user WHERE userid = '{userid}'
		</delete-user>
		<select-user>
			SELECT userid, userpassword, homedirectory,enableflag, writepermission, idletime, uploadrate, downloadrate, maxloginnumber, maxloginperip FROM ftp_user WHERE userid = '{userid}'
		</select-user>
		<select-all-users>
			SELECT userid FROM ftp_user ORDER BY userid
		</select-all-users>
		<is-admin>
			SELECT userid FROM ftp_user WHERE userid='{userid}' AND userid='admin'
		</is-admin>
		<authenticate>
			SELECT userpassword from ftp_user WHERE userid='{userid}'
		</authenticate>
	</db-user-manager>
</server>